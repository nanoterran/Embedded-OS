Part 2 – Prepare the Device Driver
    (a) From the top-level of the Linux source code directory, change directory into 
       (top-level linux source dir)/drivers/char/, create a new directory called motor, and then add the driver source code motor1.c
    (b) Next, we need to modify the Kconfig at (top-level linux source dir)/drivers/char/ so that we can select our device driver when compiling the Linux Kernel. Add the following:
           config MOTOR
               tristate “Motor”
       		default M
       		help
       			Select this option if you have a motor in your system.
    (c) After modifying the Kconfig, we need to modify the Makefile at 
       (top-level linux source dir)/drivers/char/ so that it finds the Makefile for our device driver and compiles it. Add the following:
       obj-$(CONFIG_MOTOR) += motor/
    (d) To compile our Motor Device Driver we need to create a new Makefile in the directory where our Motor Device Driver is located, which is (top-level linux source dir)/drivers/char/motor. In the Makefile add: obj-$(CONFIG_MOTOR) += motor1.o. If you want to build once the kernel is compiled we can select it using the configuration, this is done by running the command  make ARCH=arm CROSS_COMPILE=<compiler for your architecture> gconfig. Once we have the gconfig window you can select the Motor driver under Device Drivers > Character devices > Morse. By default we have made it so that it can be dynamically loaded after the kernel has been built. If you want to build the driver with the kernel set the option to Y.
    (e) Once built place the device driver manually at /lib/module/<kernel-version> (to get the kernel version run the command uname -r) or by using the Makefile with the following lines 
       make ARCH=arm CROSS_COMPILE=arm-linux-gnuabi- \
       INSTALL_MOD_PATH=/home/<user>/sandbox/motor \
       modules_install
       Note: Remember to add the correct <user> for the current system.
    (f) 
        (a) To load the device driver, run sudo insmod motor1.ko or sudo modprobe motor1. If you want to remove it run sudo rmmod motor1 or sudo modprobe -r motor1.
        (b) To load and unload it automatically as part of init process runlevel 3 first add the necessary script to load the driver at the /etc/init.d folder then go to /etc/rc3.d script folder and add the symbolic link to the script previously created at the init.d folder with the correct S#(S99motor1) and K#(K05motor1) for starting and killing the service respectively. 

