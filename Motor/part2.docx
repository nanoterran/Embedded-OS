Part 1 – Device Driver Source Code Name motor1.c

Part 2 – Prepare the Device Driver
    (a) From the top-level of the Linux source code directory, change directory into 
       <top-level_linux_source_dir>/drivers/char/, create a new directory called motor, and then add the driver source code motor1.c
       
    (b) Next, we need to modify the Kconfig at <top-level_linux_source_dir>/drivers/char/ so that we can select our device driver when compiling the Linux Kernel. Add the following:
           config MOTOR
               tristate “Motor”
       		default M
       		help
       			Select this option if you have a motor in your system.
       
    (c) After modifying the Kconfig, we need to modify the Makefile at 
       <top-level_linux_source_dir>/drivers/char/ so that it finds the Makefile for our device driver and compiles it. Add the following: obj-$(CONFIG_MOTOR) += motor/
       
    (d) To compile our Motor Device Driver we need to create a new Makefile in the directory where our Motor Device Driver is located, which is <top-level_linux_source_dir>/drivers/char/motor. In the Makefile add: 
       obj-$(CONFIG_MOTOR) += motor1.o 
       If you want to build once the kernel is compiled we can select it using the configuration, this is done by running the following command:
       > make ARCH=arm CROSS_COMPILE=<target_architecture_compiler> gconfig
       Once we have the gconfig window you can select the Motor driver under Device Drivers > Character devices > Morse. By default we have made it so that it can be dynamically loaded after the kernel has been built. If you want to build the driver with the kernel set the option to Y. If you wish not to include it you can set the option to N.
       
    (e) If you want to place the device driver manually once you build it copy the driver to /lib/module/<kernel_version>. If you want to place the module during the make process, then after compiling the module you can install it in the desired directory by running the following command: 
       > make ARCH=arm CROSS_COMPILE=<target_architecture_compiler> INSTALL_MOD_PATH=<path_to_place_module> modules_install
       
    (f) 
        (a) To load the device driver, run sudo insmod motor1.ko or sudo modprobe motor1. If you want to remove it run sudo rmmod motor1 or sudo modprobe -r motor1.
        (b) To load and unload it automatically as part of init process runlevel 3 first add the necessary script to load the driver at the /etc/init.d folder then go into /etc/rc3.d script folder and add a symbolic link to the script previously created at the init.d folder with the correct S and K. The S will be for startup instruction and K for shutting down instruction. We can add S99motor1for startup service and K05motor1killing the service. 

Part 3 – C Program testMotor.c
